<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace：指定为dao层中的哪个接口提供配置-->
<!--配置mapper的目的：为dao层接口中的方法提供sql语句配置，即针对dao层接口中的方法编写相应的sql语句-->

<mapper namespace="org.seckill.dao.SeckillDao">

    <!-- int reduceNumber(long seckillId, Date killTime); -->
    <!--id与对应接口中的对应方法名保持一致-->
    <update id="reduceNumber">
        update seckill
        set number = number-1
        where seckill_id = #{seckillId}
        and start_time <![CDATA[ <= ]]> #{killTime}
        and end_time >= #{killTime}
        and number > 0
    </update>

    <!-- Seckill queryById(long seckillId); -->
    <!-- resultType:指出结果集中，一条记录的类型
         parameterType:指定方法中形参的类型
         一般地，指定java中的参数类型的格式为：包名+类名，这里直接使用类名，是因为在spring中会有该方面的相关配置
    -->
    <select id="queryById" resultType="Seckill" parameterType="long">
        select * from seckill
        where seckill_id = #{seckillId}
    </select>

    <!-- List<Seckill> queryAll(int offset, int limit); -->
    <select id="queryAll" resultType="Seckill">
        select * from seckill
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <!--通过mybatis调用存储过程-->
    <select id="killByProcedure" statementType="CALLABLE">
        call execute_seckill(
          #{seckillId, jdbcType=BIGINT, mode=IN},
          #{phone, jdbcType=BIGINT, mode=IN},
          #{killTime, jdbcType=TIMESTAMP, mode=IN},
          #{result, jdbcType=INTEGER, mode=OUT}
        )
    </select>

</mapper>