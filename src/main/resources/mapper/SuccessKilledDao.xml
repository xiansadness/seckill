<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.seckill.dao.SuccessKilledDao">

    <!-- int insertSuccessKilled(long seckillId, long userPhone); -->
    <!--当出现主键冲突时（即一个用户重复购买同一秒杀商品时）,会报错；
        这里不想报错，故添加了ignore，插入失败时会返回0
    -->
    <!--当方法中的形参有多个参数时，可以不用设置parameterType属性，mybatis会自动识别参数的类型-->
    <insert id="insertSuccessKilled">
        insert ignore into success_killed(seckill_id, user_phone, state)
        value (#{seckillId}, #{userPhone}, 0)
    </insert>

    <!-- SuccessKilled queryByIdWithSeckill(long seckillId, long userPhone); -->
    <!--根据seckillId查询SuccessKilled对象，并携带Seckill对象-->
    <!--如何告诉mybatis把结果映射到SuccessKilled并同时映射到Seckill属性-->
    <!--mybatis的优点：可以自由控制sql语句，方便利用sql语句来进行优化-->
    <select id="queryByIdWithSeckill" resultType="SuccessKilled">
        select
        sk.seckill_id,
        sk.user_phone,
        sk.create_time,
        sk.state,
        s.seckill_id "seckill.seckill_id",
        s.name "seckill.name",
        s.number "seckill.number",
        s.start_time "seckill.start_time",
        s.end_time "seckill.end_time",
        s.create_time "seckill.create_time"
        from success_killed sk
        inner join seckill s on sk.seckill_id=s.seckill_id
        where sk.seckill_id=#{seckillId} and sk.user_phone=#{userPhone}
    </select>

</mapper>